(defpoll datetime :interval "20s"
  `date +"%H:%M"`)

(deflisten workspaces_listen :initial "(box (label :text \"󰄯  󰄰  󰄰  󰄰  󰄰\" ))"
	`/home/$USER/.config/eww/scripts/workspaces.py`)

(deflisten battery_listen "scripts/battery.sh")

(defwidget battery []
  (box :class "battery-box"
       :space-evenly false
       :halign "start"
    (label
     :class "battery-icon icon"
     :style "color: ${battery.color}"
     :text {battery.icon})
    (label
     :class "battery-status text"
     :text {battery.status})
    (label
     :class "battery-wattage text"
     :text {battery.status != "Fully Charged" ? battery.wattage : ""})))

(defwidget workspaces []
  (box :class "workspaces"
    (literal :content "${workspaces_listen}")))

(defwidget taskspanel_left []
  (box :class "taskspanel_left"
       :halign "start"
    (workspaces)))

(defwidget applications []
  (box :class "appliacations"
       :halign "center"
    (button :class "applications-button"
            :onclick "eww open tux"
     "")
    (button :class "applications-button"
            :onclick "eww open search"
     "")
    (button :class "applications-button"
            :onclick "firefox &"
     "")
    (button :class "applications-button"
            :onclick "dolphin &"
     "")
    (button :class "applications-button"
            :onclick "chromium &"
     "")
    (button :class "applications-button"
            :onclick "emacsclient -c &"
     "")))

(defwidget tray []
  (box :class "tray"
       :halign "end"
    (battery)
    (button :class "datetime"
      {datetime})))

(defwidget taskspanel_layout []
  (box :class "taskspanel"
    (taskspanel_left)
    (applications)
    (tray)))

(defwindow taskspanel
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "0px"
                      :width "100%"
                      :height "50px"
                      :anchor "bottom center")
  :stacking "fg"
  :exclusive true
  (taskspanel_layout))
